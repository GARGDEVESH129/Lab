#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>

#define MAX 20

int board[MAX];  // board[i] = column position of queen in row i
int N;           // Number of queens

// Function to print the board
void printSolution() {
    printf("\nOne Solution:\n");
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
            if (board[i] == j)
                printf("Q ");
            else
                printf(". ");
        }
        printf("\n");
    }
}

// Check if placing a queen at (row, col) is safe
bool isSafe(int row, int col) {
    for (int i = 0; i < row; i++) {
        // Check column and diagonals
        if (board[i] == col || abs(board[i] - col) == abs(i - row))
            return false;
    }
    return true;
}

// Recursive function to solve N-Queens
bool solveNQueens(int row) {
    if (row == N) {
        printSolution();
        return true;  // To print only one solution, return true here
        // return false; // To print all solutions, do not return true here
    }

    for (int col = 0; col < N; col++) {
        if (isSafe(row, col)) {
            board[row] = col;
            if (solveNQueens(row + 1))
                return true;
        }
    }
    return false;
}

int main() {
    printf("Enter the number of queens (N â‰¤ %d): ", MAX);
    scanf("%d", &N);

    if (N <= 0 || N > MAX) {
        printf("Invalid size!\n");
        return 1;
    }

    if (!solveNQueens(0)) {
        printf("No solution exists for N = %d\n", N);
    }

    return 0;
}
